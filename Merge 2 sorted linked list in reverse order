class Solution
{
    public:
    
    struct Node* reverse(Node* head){
        Node* prev = NULL;
        Node* curr = head;
        while(curr){
            Node* next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
    
    struct Node * mergeResult(Node *l1,Node *l2)
    {
        if(!l1){
            l2 = reverse(l2);
            return l2;
        }
            
        if(!l2){
            l1 = reverse(l1);
            return l1;
        }
        if(l1->data > l2->data)
            swap(l1,l2);
        
        Node* head = l1;
        Node* prev = NULL;
       
        while(l1 && l2){
            while(l1 && l1->data <= l2->data){
                prev = l1;
                l1 = l1->next;
            }
            prev->next = l2;
            swap(l1, l2);
        }
        head = reverse(head);
        return head;
    }  
};
